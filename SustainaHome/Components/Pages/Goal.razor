@page "/goal"
@inject NavigationManager NavManager
@rendermode InteractiveServer
@inject UsageStateService usageStateService

<PageTitle>Goal</PageTitle>

<div class="goal-page">
    <div class="top-row">
        <button class="return-button" @onclick="NavigateHome">Return</button>
        <div class="goal-display">@DisplayGoal</div>
    </div>

    <div class="action-buttons">
        <button class="action-btn" @onclick="PauseGoal">Pause</button>
        <button class="action-btn" @onclick="EnableEdit">Edit</button>
        <button class="action-btn" @onclick="DeleteGoal">Delete</button>
    </div>

    @if (IsEditing)
    {
        <div class="edit-form">
            <input type="number" @bind="NewGoal" class="goal-input" />
            <button class="save-btn" @onclick="SaveGoal">Save</button>
        </div>
    }

    <div class="main-section">
        <div class="history-table">
            <h3>Goal History (Past 7 Weeks)</h3>
            <table>
                <thead>
                    <tr>
                        <th>Week</th>
                        <th>Usage</th>
                        <th>Status</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < 7; i++)
                    {
                        <tr>
                            <td>Week @(i + 1)</td>
                            <td>@WeeklyUsage[i] kWh</td>
                            <td>@GetStatus(WeeklyUsage[i], GoalStatus[i])</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="tips-box">
            <h3>Energy Saving Tips</h3>
            <ul>
                <li>Use washing machine at 30°C – saves 1 wash a week.</li>
                <li>Unplug unused appliances to cut phantom loads.</li>
                <li>Laptops use up to 85% less energy than desktops.</li>
                <li>Take shorter showers to reduce heating energy.</li>
                <li>Use LED lighting – they use 75% less power.</li>
                <li>Boil only the water you need in the kettle.</li>
            </ul>
        </div>
    </div>
</div>

<style>
    .goal-page {
        padding: 40px;
        display: flex;
        flex-direction: column;
        align-items: center;
        width: 100%;
        box-sizing: border-box;
    }

    .top-row {
        width: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
        position: relative;
        margin-bottom: 30px;
    }

    .return-button {
        position: absolute;
        left: 0;
        padding: 10px 20px;
        font-size: 1rem;
        background-color: #1e3a5f;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

    .goal-display {
        font-size: 3rem;
        color: #333;
        text-align: center;
    }

    .action-buttons {
        display: flex;
        justify-content: center;
        gap: 80px;
        margin-bottom: 20px;
        width: 100%;
        max-width: 1000px;
    }

    .action-btn {
        padding: 12px 30px;
        font-size: 1.1rem;
        border-radius: 6px;
        border: none;
        background-color: #4a90e2;
        color: white;
        cursor: pointer;
    }

    .action-btn:hover {
        background-color: #357ac9;
    }

    .edit-form {
        margin-bottom: 20px;
        display: flex;
        gap: 10px;
        justify-content: center;
    }

    .goal-input {
        width: 100px;
        font-size: 1.2rem;
        padding: 6px;
        text-align: center;
    }

    .save-btn {
        padding: 6px 16px;
        font-size: 1rem;
        background-color: #2e7d32;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

    .main-section {
        display: flex;
        justify-content: space-between;
        width: 100%;
        max-width: 1200px;
        margin-top: 30px;
    }

    .history-table {
        width: 50%;
    }

    .history-table table {
        width: 100%;
        border-collapse: collapse;
        font-size: 1.1rem;
    }

    .history-table th,
    .history-table td {
        border: 1px solid #ccc;
        padding: 12px 16px;
        text-align: center;
    }

    .tips-box {
        width: 45%;
        background-color: #e6f2ec;
        padding: 24px;
        border: 1px solid #d0d7de;
        border-radius: 12px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
        font-size: 1.1rem;
        color: #333;
        line-height: 1.6;
    }

    .tips-box h3 {
        margin-bottom: 16px;
        color: #1e3a5f;
    }

    .tips-box ul {
        padding-left: 20px;
    }

    .tips-box li {
        margin-bottom: 12px;
    }
</style>

@code {
    int WeeklyGoal;
    bool IsEditing = false;
    int NewGoal;
    bool GoalActive = false;

    string DisplayGoal => GoalActive ? $"{WeeklyGoal} kWh" : "No Goal";

    List<int> WeeklyUsage = new() { 58, 63, 50, 70, 61, 45, 0 };
    List<string> GoalStatus = new() { "Success", "Fail", "Success", "Fail", "Success", "Success", "N/A" };

    protected override void OnInitialized()
    {
        WeeklyGoal = usageStateService.WeeklyGoal;
        GoalActive = usageStateService.GoalActive;
    }

    void NavigateHome() => NavManager.NavigateTo("/");

    void PauseGoal() { }

    void EnableEdit()
    {
        IsEditing = true;
        NewGoal = WeeklyGoal;
    }

    void SaveGoal()
    {
        usageStateService.WeeklyGoal = NewGoal;
        usageStateService.GoalActive = true;

        WeeklyGoal = NewGoal;
        GoalActive = true;
        IsEditing = false;
    }

    void DeleteGoal()
    {
        usageStateService.GoalActive = false;

        GoalActive = false;
    }

    string GetStatus(int usage, string status)
    {
        return status switch
        {
            "N/A" => "N/A",
            _ => usage <= WeeklyGoal ? "Success" : "Fail"
        };
    }
}